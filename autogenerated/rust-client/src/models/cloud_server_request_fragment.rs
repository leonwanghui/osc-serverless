/*
 * Open Service Cloud API
 *
 * Open Service Cloud API to manage different backend cloud services.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: wanghui71leon@gmail.com
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct CloudServerRequestFragment {
    #[serde(rename = "imageRef")]
    pub image_ref: String,
    #[serde(rename = "flavorRef")]
    pub flavor_ref: String,
    #[serde(rename = "user_data", skip_serializing_if = "Option::is_none")]
    pub user_data: Option<String>,
    #[serde(rename = "adminPass", skip_serializing_if = "Option::is_none")]
    pub admin_pass: Option<String>,
    #[serde(rename = "key_name", skip_serializing_if = "Option::is_none")]
    pub key_name: Option<String>,
    #[serde(rename = "vpcid")]
    pub vpcid: String,
    #[serde(rename = "nics")]
    pub nics: Vec<crate::models::CloudServerRequestFragmentNics>,
    #[serde(rename = "ip_address", skip_serializing_if = "Option::is_none")]
    pub ip_address: Option<String>,
    #[serde(rename = "publicip", skip_serializing_if = "Option::is_none")]
    pub publicip: Option<crate::models::CloudServerRequestFragmentPublicip>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "isAutoRename", skip_serializing_if = "Option::is_none")]
    pub is_auto_rename: Option<bool>,
    #[serde(rename = "root_volume")]
    pub root_volume: crate::models::CloudServerRequestFragmentRootVolume,
    #[serde(rename = "security_groups", skip_serializing_if = "Option::is_none")]
    pub security_groups: Option<Vec<crate::models::CloudServerRequestFragmentSecurityGroups>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<serde_json::Value>,
}

impl CloudServerRequestFragment {
    pub fn new(image_ref: String, flavor_ref: String, vpcid: String, nics: Vec<crate::models::CloudServerRequestFragmentNics>, root_volume: crate::models::CloudServerRequestFragmentRootVolume) -> CloudServerRequestFragment {
        CloudServerRequestFragment {
            image_ref: image_ref,
            flavor_ref: flavor_ref,
            user_data: None,
            admin_pass: None,
            key_name: None,
            vpcid: vpcid,
            nics: nics,
            ip_address: None,
            publicip: None,
            count: None,
            is_auto_rename: None,
            root_volume: root_volume,
            security_groups: None,
            metadata: None,
        }
    }
}


