/**
 * Open Service Cloud API
 * Open Service Cloud API to manage different backend cloud services.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: wanghui71leon@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BlockVolumeRequestFragment model module.
 * @module model/BlockVolumeRequestFragment
 * @version 0.0.3
 */
class BlockVolumeRequestFragment {
    /**
     * Constructs a new <code>BlockVolumeRequestFragment</code>.
     * @alias module:model/BlockVolumeRequestFragment
     * @param volumeType {module:model/BlockVolumeRequestFragment.VolumeTypeEnum} 
     */
    constructor(volumeType) { 
        
        BlockVolumeRequestFragment.initialize(this, volumeType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, volumeType) { 
        obj['volume_type'] = volumeType;
    }

    /**
     * Constructs a <code>BlockVolumeRequestFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlockVolumeRequestFragment} obj Optional instance to populate.
     * @return {module:model/BlockVolumeRequestFragment} The populated <code>BlockVolumeRequestFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlockVolumeRequestFragment();

            if (data.hasOwnProperty('imageRef')) {
                obj['imageRef'] = ApiClient.convertToType(data['imageRef'], 'String');
            }
            if (data.hasOwnProperty('volume_type')) {
                obj['volume_type'] = ApiClient.convertToType(data['volume_type'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('sharable')) {
                obj['sharable'] = ApiClient.convertToType(data['sharable'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('multiattach')) {
                obj['multiattach'] = ApiClient.convertToType(data['multiattach'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} imageRef
 */
BlockVolumeRequestFragment.prototype['imageRef'] = undefined;

/**
 * @member {module:model/BlockVolumeRequestFragment.VolumeTypeEnum} volume_type
 */
BlockVolumeRequestFragment.prototype['volume_type'] = undefined;

/**
 * @member {Number} count
 * @default 1
 */
BlockVolumeRequestFragment.prototype['count'] = 1;

/**
 * @member {module:model/BlockVolumeRequestFragment.SharableEnum} sharable
 */
BlockVolumeRequestFragment.prototype['sharable'] = undefined;

/**
 * @member {Object} metadata
 */
BlockVolumeRequestFragment.prototype['metadata'] = undefined;

/**
 * @member {Boolean} multiattach
 */
BlockVolumeRequestFragment.prototype['multiattach'] = undefined;





/**
 * Allowed values for the <code>volume_type</code> property.
 * @enum {String}
 * @readonly
 */
BlockVolumeRequestFragment['VolumeTypeEnum'] = {

    /**
     * value: "SSD"
     * @const
     */
    "SSD": "SSD",

    /**
     * value: "SAS"
     * @const
     */
    "SAS": "SAS",

    /**
     * value: "SATA"
     * @const
     */
    "SATA": "SATA"
};


/**
 * Allowed values for the <code>sharable</code> property.
 * @enum {String}
 * @readonly
 */
BlockVolumeRequestFragment['SharableEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};



export default BlockVolumeRequestFragment;

