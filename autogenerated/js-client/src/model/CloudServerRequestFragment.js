/**
 * Open Service Cloud API
 * Open Service Cloud API to manage different backend cloud services.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: wanghui71leon@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudServerRequestFragmentNics from './CloudServerRequestFragmentNics';
import CloudServerRequestFragmentPublicip from './CloudServerRequestFragmentPublicip';
import CloudServerRequestFragmentRootVolume from './CloudServerRequestFragmentRootVolume';
import CloudServerRequestFragmentSecurityGroups from './CloudServerRequestFragmentSecurityGroups';

/**
 * The CloudServerRequestFragment model module.
 * @module model/CloudServerRequestFragment
 * @version 0.0.3
 */
class CloudServerRequestFragment {
    /**
     * Constructs a new <code>CloudServerRequestFragment</code>.
     * @alias module:model/CloudServerRequestFragment
     * @param imageRef {String} 
     * @param flavorRef {String} 
     * @param vpcid {String} 
     * @param nics {Array.<module:model/CloudServerRequestFragmentNics>} 
     * @param rootVolume {module:model/CloudServerRequestFragmentRootVolume} 
     */
    constructor(imageRef, flavorRef, vpcid, nics, rootVolume) { 
        
        CloudServerRequestFragment.initialize(this, imageRef, flavorRef, vpcid, nics, rootVolume);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, imageRef, flavorRef, vpcid, nics, rootVolume) { 
        obj['imageRef'] = imageRef;
        obj['flavorRef'] = flavorRef;
        obj['vpcid'] = vpcid;
        obj['nics'] = nics;
        obj['root_volume'] = rootVolume;
    }

    /**
     * Constructs a <code>CloudServerRequestFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudServerRequestFragment} obj Optional instance to populate.
     * @return {module:model/CloudServerRequestFragment} The populated <code>CloudServerRequestFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudServerRequestFragment();

            if (data.hasOwnProperty('imageRef')) {
                obj['imageRef'] = ApiClient.convertToType(data['imageRef'], 'String');
            }
            if (data.hasOwnProperty('flavorRef')) {
                obj['flavorRef'] = ApiClient.convertToType(data['flavorRef'], 'String');
            }
            if (data.hasOwnProperty('user_data')) {
                obj['user_data'] = ApiClient.convertToType(data['user_data'], 'String');
            }
            if (data.hasOwnProperty('adminPass')) {
                obj['adminPass'] = ApiClient.convertToType(data['adminPass'], 'String');
            }
            if (data.hasOwnProperty('key_name')) {
                obj['key_name'] = ApiClient.convertToType(data['key_name'], 'String');
            }
            if (data.hasOwnProperty('vpcid')) {
                obj['vpcid'] = ApiClient.convertToType(data['vpcid'], 'String');
            }
            if (data.hasOwnProperty('nics')) {
                obj['nics'] = ApiClient.convertToType(data['nics'], [CloudServerRequestFragmentNics]);
            }
            if (data.hasOwnProperty('ip_address')) {
                obj['ip_address'] = ApiClient.convertToType(data['ip_address'], 'String');
            }
            if (data.hasOwnProperty('publicip')) {
                obj['publicip'] = CloudServerRequestFragmentPublicip.constructFromObject(data['publicip']);
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('isAutoRename')) {
                obj['isAutoRename'] = ApiClient.convertToType(data['isAutoRename'], 'Boolean');
            }
            if (data.hasOwnProperty('root_volume')) {
                obj['root_volume'] = CloudServerRequestFragmentRootVolume.constructFromObject(data['root_volume']);
            }
            if (data.hasOwnProperty('security_groups')) {
                obj['security_groups'] = ApiClient.convertToType(data['security_groups'], [CloudServerRequestFragmentSecurityGroups]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {String} imageRef
 */
CloudServerRequestFragment.prototype['imageRef'] = undefined;

/**
 * @member {String} flavorRef
 */
CloudServerRequestFragment.prototype['flavorRef'] = undefined;

/**
 * @member {String} user_data
 */
CloudServerRequestFragment.prototype['user_data'] = undefined;

/**
 * @member {String} adminPass
 */
CloudServerRequestFragment.prototype['adminPass'] = undefined;

/**
 * @member {String} key_name
 */
CloudServerRequestFragment.prototype['key_name'] = undefined;

/**
 * @member {String} vpcid
 */
CloudServerRequestFragment.prototype['vpcid'] = undefined;

/**
 * @member {Array.<module:model/CloudServerRequestFragmentNics>} nics
 */
CloudServerRequestFragment.prototype['nics'] = undefined;

/**
 * @member {String} ip_address
 */
CloudServerRequestFragment.prototype['ip_address'] = undefined;

/**
 * @member {module:model/CloudServerRequestFragmentPublicip} publicip
 */
CloudServerRequestFragment.prototype['publicip'] = undefined;

/**
 * @member {Number} count
 * @default 1
 */
CloudServerRequestFragment.prototype['count'] = 1;

/**
 * @member {Boolean} isAutoRename
 * @default true
 */
CloudServerRequestFragment.prototype['isAutoRename'] = true;

/**
 * @member {module:model/CloudServerRequestFragmentRootVolume} root_volume
 */
CloudServerRequestFragment.prototype['root_volume'] = undefined;

/**
 * @member {Array.<module:model/CloudServerRequestFragmentSecurityGroups>} security_groups
 */
CloudServerRequestFragment.prototype['security_groups'] = undefined;

/**
 * @member {Object} metadata
 */
CloudServerRequestFragment.prototype['metadata'] = undefined;






export default CloudServerRequestFragment;

