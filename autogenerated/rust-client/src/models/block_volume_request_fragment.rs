/*
 * Open Service Cloud API
 *
 * Open Service Cloud API to manage different backend cloud services.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: wanghui71leon@gmail.com
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct BlockVolumeRequestFragment {
    #[serde(rename = "imageRef", skip_serializing_if = "Option::is_none")]
    pub image_ref: Option<String>,
    #[serde(rename = "volume_type")]
    pub volume_type: VolumeType,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "sharable", skip_serializing_if = "Option::is_none")]
    pub sharable: Option<Sharable>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<serde_json::Value>,
    #[serde(rename = "multiattach", skip_serializing_if = "Option::is_none")]
    pub multiattach: Option<bool>,
}

impl BlockVolumeRequestFragment {
    pub fn new(volume_type: VolumeType) -> BlockVolumeRequestFragment {
        BlockVolumeRequestFragment {
            image_ref: None,
            volume_type: volume_type,
            count: None,
            sharable: None,
            metadata: None,
            multiattach: None,
        }
    }
}

/// 
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum VolumeType {
    #[serde(rename = "SSD")]
    SSD,
    #[serde(rename = "SAS")]
    SAS,
    #[serde(rename = "SATA")]
    SATA,
}
/// 
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum Sharable {
    #[serde(rename = "true")]
    _True,
    #[serde(rename = "false")]
    _False,
}

