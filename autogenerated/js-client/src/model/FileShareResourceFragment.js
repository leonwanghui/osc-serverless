/**
 * Open Service Cloud API
 * Open Service Cloud API to manage different backend cloud services.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: wanghui71leon@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileShareResourceFragmentExportLocations from './FileShareResourceFragmentExportLocations';

/**
 * The FileShareResourceFragment model module.
 * @module model/FileShareResourceFragment
 * @version 0.0.3
 */
class FileShareResourceFragment {
    /**
     * Constructs a new <code>FileShareResourceFragment</code>.
     * @alias module:model/FileShareResourceFragment
     */
    constructor() { 
        
        FileShareResourceFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileShareResourceFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileShareResourceFragment} obj Optional instance to populate.
     * @return {module:model/FileShareResourceFragment} The populated <code>FileShareResourceFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileShareResourceFragment();

            if (data.hasOwnProperty('share_server_id')) {
                obj['share_server_id'] = ApiClient.convertToType(data['share_server_id'], 'String');
            }
            if (data.hasOwnProperty('share_network_id')) {
                obj['share_network_id'] = ApiClient.convertToType(data['share_network_id'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('share_proto')) {
                obj['share_proto'] = ApiClient.convertToType(data['share_proto'], 'String');
            }
            if (data.hasOwnProperty('share_type_name')) {
                obj['share_type_name'] = ApiClient.convertToType(data['share_type_name'], 'String');
            }
            if (data.hasOwnProperty('share_type')) {
                obj['share_type'] = ApiClient.convertToType(data['share_type'], 'String');
            }
            if (data.hasOwnProperty('export_locations')) {
                obj['export_locations'] = ApiClient.convertToType(data['export_locations'], [FileShareResourceFragmentExportLocations]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} share_server_id
 */
FileShareResourceFragment.prototype['share_server_id'] = undefined;

/**
 * @member {String} share_network_id
 */
FileShareResourceFragment.prototype['share_network_id'] = undefined;

/**
 * @member {Object} metadata
 */
FileShareResourceFragment.prototype['metadata'] = undefined;

/**
 * @member {String} host
 */
FileShareResourceFragment.prototype['host'] = undefined;

/**
 * @member {String} share_proto
 */
FileShareResourceFragment.prototype['share_proto'] = undefined;

/**
 * @member {String} share_type_name
 */
FileShareResourceFragment.prototype['share_type_name'] = undefined;

/**
 * @member {String} share_type
 */
FileShareResourceFragment.prototype['share_type'] = undefined;

/**
 * @member {Array.<module:model/FileShareResourceFragmentExportLocations>} export_locations
 */
FileShareResourceFragment.prototype['export_locations'] = undefined;






export default FileShareResourceFragment;

