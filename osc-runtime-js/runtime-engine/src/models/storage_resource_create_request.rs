/*
 * Open Service Cloud API
 *
 * Open Service Cloud API to manage different backend cloud services.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: wanghui71leon@gmail.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct StorageResourceCreateRequest {
    #[serde(rename = "cloud_provider")]
    pub cloud_provider: crate::models::CloudProviderInfo,
    #[serde(rename = "availability_zone")]
    pub availability_zone: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "size")]
    pub size: i32,
    #[serde(
        rename = "block_volume_request_fragment",
        skip_serializing_if = "Option::is_none"
    )]
    pub block_volume_request_fragment: Option<crate::models::BlockVolumeRequestFragment>,
    #[serde(
        rename = "file_share_request_fragment",
        skip_serializing_if = "Option::is_none"
    )]
    pub file_share_request_fragment: Option<crate::models::FileShareRequestFragment>,
    #[serde(
        rename = "backup_request_fragment",
        skip_serializing_if = "Option::is_none"
    )]
    pub backup_request_fragment: Option<crate::models::BackupRequestFragment>,
}

impl StorageResourceCreateRequest {
    pub fn new(
        cloud_provider: crate::models::CloudProviderInfo,
        availability_zone: String,
        name: String,
        size: i32,
    ) -> StorageResourceCreateRequest {
        StorageResourceCreateRequest {
            cloud_provider: cloud_provider,
            availability_zone: availability_zone,
            name: name,
            description: None,
            size: size,
            block_volume_request_fragment: None,
            file_share_request_fragment: None,
            backup_request_fragment: None,
        }
    }
}
